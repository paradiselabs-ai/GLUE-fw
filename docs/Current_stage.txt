Top priority:
understanding the flow of agents well and adjusting their prompts so they do as the flow expects them to do
For now the team lead understands the request well and interacts with it's environment in order to get the user task done.
(Important) Test the team lead ability to understand requests and it's adherence to the reAct prompt.
(Next) Test it's ability to use it's team members update team members prompt definition according to their specialization.
(Upcoming) Update the DSL and make sure it's robust and works well.
https://python.langchain.com/docs/integrations/llm_caching/



Pdf reader:
https://python.langchain.com/docs/integrations/document_loaders/pymupdf4llm/

GitHub tools:
https://python.langchain.com/docs/integrations/tools/github/
https://python.langchain.com/docs/integrations/document_loaders/github/

Directory reader:
https://python.langchain.com/docs/how_to/document_loader_directory/
https://python.langchain.com/docs/integrations/document_loaders/docling/  # Document reader including pdf formats (https://docling-project.github.io/docling/)

Vector search:
https://python.langchain.com/docs/integrations/vectorstores/weaviate/ (Can be used online)
https://python.langchain.com/docs/integrations/vectorstores/chroma/ (store without any credentials)


Productivity toolset: 
	1 Slack:
        https://python.langchain.com/docs/integrations/tools/slack/
	https://python.langchain.com/docs/integrations/document_loaders/slack/

	2.  Payments:
	https://python.langchain.com/docs/integrations/tools/goat/

	3. Google:
	https://python.langchain.com/docs/integrations/document_loaders/google_drive/
	https://python.langchain.com/docs/integrations/document_loaders/google_cloud_storage_directory/


 Web:
Web search:
https://python.langchain.com/docs/integrations/tools/serpapi/
https://python.langchain.com/docs/integrations/document_loaders/wikipedia/

Web Usage:
https://python.langchain.com/docs/integrations/tools/playwright/